openapi: 3.0.1
info:
  title: Send Email Service API
  description: Send Email from GoOutSafe with Microservices
  version: "0.1"
servers:
- url: /
paths:
    /send_email/confirm_registration:
      post:
        tags:
          - Send Email
        summary: Send an email to the user to confirm the registration.
        operationId: app.confirm_registration
        requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UserRegistered'
        responses:
          200:
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Result'
    /send_email/booking_confirmation:
      post:
        tags:
          - Send Email
        summary: An email to send the confermation of a new refistration
        operationId: app.confirm_booking_registration
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewBooking'
        responses:
          200:
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Result'
    /send_email/send_contact:
      post:
        tags:
          - Send Email
        summary: Send an email to all people that need to be allert about covid 19 contacts
        operationId: app.send_possible_covid_contact
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PossibleContacts'
        responses:
          200:
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Result'
components:
  schemas:
    UserRegistered:
      required:
        - name
        - email
      type: object
      properties:
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: User name
          example: "Eleonora"
        email:
          maxLength: 100
          minLength: 1
          type: string
          description: User email
          example: "ele@gmail.com"
    NewBooking:
      required:
        - email_user
        - user_name
        - restaurant_name
        - friends
        - booking_time
      type: object
      properties:
        email_user:
          type: string
          description: User email that made the reservation
          example: "amazing@email.com"
        user_name:
          maxLength: 100
          minLength: 1
          type: string
          description: User name that made the reservation
          example: "Giorgia"
        restaurant_name:
          maxLength: 100
          minLength: 1
          type: string
          description: Restaurant name
          example: "Il Pomodorino"
        friends:
          type: array
          description: The list of friend included inside the booking
          items:
            type: string
            example: "friend@email.com"
          example: ["friend@email.com"]
        booking_time:
          type: string
          format: date-time
          example: 2017-07-21T17:32:28Z
    PossibleContacts:
      required:
        - friends
        - user_positive
        - past_restaurants
        - future_restaurants
      type: object
      properties:
        user_positive:
          type: object
          description: The user information that have a new covid19 positive result
          properties:
            email:
              type: string
              example: "user@asu.edu"
            name:
              type: string
              example: "User"
        past_restaurants:
          type: array
          description: the list of restaurants where the person positive was.
          items:
            $ref: '#/components/schemas/RestaurantInformation'
        future_restaurants:
          type: array
          description: the list of restaurants where the person positive had a new reservation.
          items:
              $ref: '#/components/schemas/RestaurantInformation'

    PositiveUser:
      required:
        - email
        - name
      type: object
      properties:
        email:
          type: string
          example: "user@asu.edu"
        name:
          type: string
          example: "User"
    RestaurantInformation:
      required:
        - name
        - owner_email
        - owner_name
        - date_booking
        - friends
      type: object
      properties:
          name:
            type: string
            example: "Il Ristorante che non c'Ã¨"
          owner_email:
            type: string
            example: "user@mail.com"
          owner_name:
            type: string
            example: "Owner"
          date_booking:
            type: string
            format: date-time
            example: 2017-07-21T17:32:28Z
          friends:
            type: array
            description: the list of friend included inside the booking
            items:
              type: string
              example: "friend@email.com"
            example: [ "friend@email.com" ]
    Result:
      required:
        - result
      type: object
      properties:
        result:
          type: string
          default: Type of result
          example: "Ok"